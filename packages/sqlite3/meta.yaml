package:
  name: sqlite3
  version: 1.0.0 # Nonsense
  tag:
    - always
  top-level:
    - sqlite3
    - _sqlite3
source:
    path: ../../cpython/build/Python-3.14.0a1
build:
  type: cpython_module
  script: |

    sed -i 's/assert _sre.MAGIC == MAGIC, "SRE module mismatch"//' Lib/re/_compiler.py
    export FILES=(
      "Modules/_sqlite/blob.c"
      "Modules/_sqlite/connection.c"
      "Modules/_sqlite/cursor.c"
      "Modules/_sqlite/microprotocols.c"
      "Modules/_sqlite/module.c"
      "Modules/_sqlite/prepare_protocol.c"
      "Modules/_sqlite/row.c"
      "Modules/_sqlite/statement.c"
      "Modules/_sqlite/util.c"
    )

    EMCC_CFLAGS="-DSQLITE_DISABLE_FALLOCATE=1" \
      embuilder build sqlite3 --pic

    cat > /tmp/posix_stub.c <<'EOF'
    #include <errno.h>
    #ifdef __cplusplus
    extern "C" {
    #endif
    int posix_fallocate(int fd, long long len) { (void)fd; (void)len; return 0; }
    int geteuid(void) { return 1; }
    int getuid (void) { return 1; }
    #ifdef __cplusplus
    }
    #endif
    EOF
    emcc -fPIC -c /tmp/posix_stub.c -o /tmp/posix_stub.o

    for file in "${FILES[@]}"; do
      emcc \
        -DHAVE_POSIX_FALLOCATE=0 \
        $STDLIB_MODULE_CFLAGS \
        -c "${file}" \
        -o "${file/.c/.o}" \
        -sUSE_SQLITE3 \
        -DMODULENAME=sqlite
    done

    OBJECT_FILES="$(find Modules/_sqlite -name '*.o') /tmp/posix_stub.o"
    emcc \
      ${OBJECT_FILES} \
      -o "${DISTDIR}/_sqlite3.so" \
      ${SIDE_MODULE_LDFLAGS} \
      -DHAVE_POSIX_FALLOCATE=0 \
      -sUSE_SQLITE3 \
      -lsqlite3
    
    cd Lib && tar --exclude='test' -cf - sqlite3 | tar -C "${DISTDIR}" -xf -
